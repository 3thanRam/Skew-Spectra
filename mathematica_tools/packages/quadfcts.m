(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)

BeginPackage["quadfcts`"]

F2::usage="F2 Kernel";
G2::usage="G2 Kernel";
S2::usage="S2 Kernel";
Dfunc::usage="Array of d Kernels";

Begin["`Private`"]
Get[NotebookDirectory[]<>"globalvars.m"] ;
Get[NotebookDirectory[]<>"util.m"] ;

F2[v1_,v2_]:=5/7+0.5 Dot[v1,v2] (1/Norm[v1]^2+1/Norm[v2]^2)+(2/7) (Dot[v1,v2]/(Norm[v1] Norm[v2]))^2;

G2[v1_,v2_]:=3/7+0.5 Dot[v1,v2] (1/Norm[v1]^2+1/Norm[v2]^2)+(4/7) (Dot[v1,v2]/(Norm[v1] Norm[v2]))^2;

S2[v1_,v2_]:=(Dot[v1,v2]/Norm[v1] Norm[v2])^2-1;

(* Decomposition of Bi-spectrum into 14 quadratic operators following https://arxiv.org/pdf/2010.14267 without cosmological biases*)
d1[v1_,v2_]:=2F2[v1,v2];

d2[v1_,v2_]:=1;

d3[v1_,v2_]:=2S2[v1,v2];

d4[v1_,v2_]:=(v1[[3]]+v2[[3]])/2 (v1[[3]]/Norm[v1]^2+v2[[3]]/Norm[v2]^2);

d5[v1_,v2_]:=2(F2[v1,v2] ((v1[[3]]/Norm[v1])^2+(v2[[3]]/Norm[v2]^2))+(-v1[[3]]-v2[[3]])^2/(Sqrt[(-v1[[1]]-v2[[1]])^2+(-v1[[2]]-v2[[2]])^2+(-v1[[3]]-v2[[3]])^2]^2) G2[v1,v2]);

d6[v1_,v2_]:=((v1[[3]]/Norm[v1])^2+(v2[[3]]/Norm[v2]^2));

d7[v1_,v2_]:=2S2[v1,v2] ((v1[[3]]/Norm[v1])^2+(v2[[3]]/Norm[v2]^2));

d8[v1_,v2_]:=(v1[[3]]+v2[[3]])/2 (v1[[3]]^3/Norm[v1]^4+v2[[3]]^3/Norm[v2]^4+2 v1[[3]] (v2[[3]]/(Norm[v1] Norm[v2]))^2+2 v2[[3]] (v1[[3]]/(Norm[v1] Norm[v2]))^2);

d9[v1_,v2_]:=((v1[[3]] v2[[3]]/(Norm[v1] Norm[v2]))^2 F2[v1,v2]+((v1[[3]]/Norm[v1])^2+(v2[[3]]/Norm[v2])^2) ((-v1[[3]]-v2[[3]])/(Sqrt[(-v1[[1]]-v2[[1]])^2+(-v1[[2]]-v2[[2]])^2+(-v1[[3]]-v2[[3]])^2]))^2 G2[v1,v2]);

d10[v1_,v2_]:=(v1[[3]] v2[[3]]/(Norm[v1] Norm[v2]))^2;

d11[v1_,v2_]:=2S2[v1,v2] (v1[[3]] v2[[3]]/(Norm[v1] Norm[v2]))^2;

d12[v1_,v2_]:=(v1[[3]]+v2[[3]])/2 ((v1[[3]]/Norm[v1])^4 v2[[3]]/Norm[v2]^2+(v2[[3]]/Norm[v2])^4 v1[[3]]/Norm[v1]^2+2 (v2[[3]]/Norm[v2])^2 v1[[3]]^3/Norm[v1]^4+2 (v1[[3]]/Norm[v1])^2 v2[[3]]^3/Norm[v2]^4);

d13[v1_,v2_]:=((v1[[3]] v2[[3]] (-v1[[3]]-v2[[3]]))/(Norm[v1] Norm[v2] Sqrt[(-v1[[1]]-v2[[1]])^2+(-v1[[2]]-v2[[2]])^2+(-v1[[3]]-v2[[3]])^2]))^2 G2[v1,v2];

d14[v1_,v2_]:=(v1[[3]]+v2[[3]])/2 (v1[[3]]^3 (v2[[3]]/(Norm[v1] Norm[v2]))^4+v2[[3]]^3 (v1[[3]]/(Norm[v1] Norm[v2]))^4);


dlist={d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14};

(*function to call the quadratic operators*)
Dfunc[i_,k1_,k2_]:=Simplfunc[dlist[[i]][k1,k2]];

End[] (*End Private Context*)

EndPackage[]



