(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
BeginPackage["biasreduction`"]


reducebiases::usage="Get minimum number of biases";


Begin["`Private`"]
Get[NotebookDirectory[]<>"globalvars.m"] ;
Get[NotebookDirectory[]<>"fftlogdiv.m"]; 

mydirectory=ParentDirectory[NotebookDirectory[],2]<>"/randomrange";

runmakefile[]:=Module[{},
commake="make -C "<>mydirectory;
Run[commake];
];

numbTostring[numb_]:=If[MemberQ[{Infinity,-Infinity},numb],ToString[numb],ToString[numb//CForm]];

getrange[equ0_]:=Module[{equ=equ0},
equ=equ/.{LessEqual->Less,GreaterEqual->Greater};
equ/.{a_<Symbol["\[Nu]"]<b_:>{a,b},a_<Symbol["\[Nu]"]:>{a,Infinity},Symbol["\[Nu]"]>a_:>{a,Infinity},Symbol["\[Nu]"]<b_:>{-Infinity,b},b_>Symbol["\[Nu]"]:>{-Infinity,b},Symbol["\[Nu]"]\[Element]Reals->{-Infinity,Infinity}}
];


setinifile[Ranges0_]:=Module[{Ranges=Ranges0},

inifile=mydirectory<>"/ranges.ini";
n=Length[Ranges];
P=ConstantArray[0,2n+1];
P[[1]]={"N"->n};
For[r=1,r<n+1,r++,
{IRr,UVr}=Ranges[[r]];
{IRa,IRb}=getrange[IRr];
{UVa,UVb}=getrange[UVr];
P[[2r]]={"ranges"<>ToString[r-1]<>"IR"->numbTostring[IRa]<>","<>numbTostring[IRb]};
P[[2r+1]]={"ranges"<>ToString[r-1]<>"UV"->numbTostring[UVa]<>","<>numbTostring[UVb]}
];
inicontent=ExportString[<|"General"-><|P|>|>,"Ini"];
WriteString[inifile,inicontent];
Close[inifile];
];

runcode[n0_]:=Module[{n=n0},
comrun="cd "<>mydirectory<>" && ./Main";
comrun =comrun<>" > "<>mydirectory<>"/file.txt";
Print["run command: ",comrun];
Run[comrun];
file=mydirectory<>"/file.txt";
Print["import command: ",file];
output=Import[file];

nuArr=ConstantArray[0,n];
output=StringSplit[ReadString[file],"\n"];

remLetEq[expr_]:=StringDelete["="][StringDelete[LetterCharacter..][expr]];
Tonumber[expr_]:=Read[StringToStream[expr],Number];

l1=remLetEq[output[[1]]];
{Nc,Ndivs}=Tonumber[#]&/@StringTrim[StringSplit[l1,","]];

For[i=1,i<n+1,i++,
nuArr[[i]]=Tonumber[StringTrim[StringSplit[output[[i+1]],"="][[2]]]];
];
LDiv=ToExpression[StringReplace[remLetEq[output[[-1]]],{"["->"{","]"->"}"}]];
{Nc,Ndivs,nuArr,LDiv}
];

reducebiases[n0_,ranges0_]:=Module[{n=n0,ranges=ranges0},

runmakefile[];

tb3=AbsoluteTiming[
setinifile[ranges];
][[1]];
Print["setinifile: ",tb3];

(*get number of different fftlog biases, corresponding number of divergences to account for, the values of the biases and the necessary divergent pieces*)
tb4=AbsoluteTiming[
{Nc,Ndivs,biases,LDiv}=runcode[n];
][[1]];
Print["runcode: ",tb4];

{LDiv,biases}
];


End[]

EndPackage[]



